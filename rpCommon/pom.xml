<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
	    <groupId>com.redwood.rp.core</groupId>
	    <artifactId>rpcore</artifactId>
		<version>0.1</version>
	</parent>

	<groupId>com.redwood.rp.common</groupId>
	<artifactId>rpCommon</artifactId>
	<packaging>jar</packaging>
	<name>RP Common</name>
	<description>RP Common - is common component in Redwood core platform </description>
	<organization>
		<name>Redwood</name>
		<url>http://www.redwud.com</url>
	</organization>


	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<rpcore.version>0.1</rpcore.version>

		<!-- TDD Test -->
		<ant.version>1.8.2</ant.version>
		<junit.version>4.8.2</junit.version>
		<junitperf.version>1.8</junitperf.version>
		<easymock.version>2.5</easymock.version>
		<powermock.version>1.4.10</powermock.version>

		<!-- Maven test -->
		<jetty.version>7.0.0.v20091005</jetty.version>
		<maven.test.skip>true</maven.test.skip>

	</properties>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
			<resource>
				<directory>src/main/java</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.properties</include>
					<include>com/redwood/engine/**/*Context.xml</include>
					<include>com/redwood/engine/**/*.hbm.xml</include>
					<include>com/redwood/engine/**/*.pdm.xml</include>
				</includes>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>target/${project.build.finalName}</directory>
				<includes>
					<include>WEB-INF/conf/**/spring/*Context.xml</include>
					<include>WEB-INF/lib/**/*.jar</include>
					<include>WEB-INF/web.xml</include>
					<include>WEB-INF/classes/**/*.properties</include>
					<include>WEB-INF/classes/**/*.hbm.xml</include>
				</includes>
			</testResource>
			<testResource>
				<directory>src/test/resources</directory>
				<includes>
					<include>**/*.properties</include>
					<include>**/*.xml</include>
				</includes>
			</testResource>
		</testResources>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-scm-plugin</artifactId>
				<configuration>
					<workingDirectory>..</workingDirectory>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>

			<!-- This creates the JAR locally in the project -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.3</version>
				<executions>
					<execution>
						<configuration>
							<classesDirectory>target/classes</classesDirectory>
							<finalName>${project.build.finalName}</finalName>
							<outputDirectory>target</outputDirectory>
							<excludes>
								<exclude>**/log4j.properties</exclude>
								<exclude>**/mq.properties</exclude>
								<exclude>**/hibernate.properties</exclude>
							</excludes>
						</configuration>
						<phase>package</phase>
						<id>Create JAR in project</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>

				</executions>
			</plugin>

			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<version>6.0.2</version>
				<configuration>
					<scanIntervalSeconds>10</scanIntervalSeconds>
					<webAppSourceDirectory>${project.build.directory}/${project.build.finalName}</webAppSourceDirectory>
					<classesDirectory>${project.build.directory}/${project.build.finalName}/WEB-INF/classes</classesDirectory>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>javax.servlet</groupId>
						<artifactId>jstl</artifactId>
						<version>1.2</version>
						<scope>runtime</scope>
					</dependency>
					<!-- <dependency> -->
					<!-- <groupId>org.slf4j</groupId> -->
					<!-- <artifactId>slf4j-jcl</artifactId> -->
					<!-- <version>${slf4j.version}</version> -->
					<!-- <type>jar</type> -->
					<!-- </dependency> -->
					<dependency>
						<groupId>log4j</groupId>
						<artifactId>log4j</artifactId>
						<version>${log4j.version}</version>
						<type>jar</type>
					</dependency>
				</dependencies>
			</plugin>


			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>tomcat-maven-plugin</artifactId>
				<configuration>
					<warFile>path/to/my/warFile.war</warFile>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.1</version>
				<configuration>
					<goals>install</goals>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<childDelegation>true</childDelegation>
					<testFailureIgnore>true</testFailureIgnore>
					<forkMode>perTest</forkMode>
					<argLine>-Xmx512m -XX:MaxPermSize=256m</argLine>
					<excludes>
					</excludes>
				</configuration>

				<!-- junit test goal -->
				<executions>
					<execution>
						<id>unit-tests</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<skip>${maven.test.skip}</skip>
							<includes>
								<!-- Include unit tests within integration-test phase -->
								<include>**/*Test.java</include>
							</includes>
							<excludes>
								<!-- Exclude integration tests within (unit) test phase -->
								<exclude>**/*IT.java</exclude>
							</excludes>
						</configuration>
					</execution>
					<execution>
						<id>integration-tests</id>
						<phase>integration-test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<skip>${maven.test.skip}</skip>
							<includes>
								<!-- Include integration tests within integration-test phase -->
								<include>**/*IT.java</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<instrumentation>
						<excludes>
							<exclude>com/redwood/core/constant/*.class</exclude>
							<exclude>com/redwood/core/facade/*.class</exclude>
							<exclude>com/redwood/core/faces/**/*.class</exclude>
							<exclude>com/redwood/core/hibernate/*.class</exclude>
							<exclude>com/redwood/core/service/Memcache*.class</exclude>
							<exclude>com/redwood/core/service/Quartz*.class</exclude>
							<exclude>com/redwood/core/test/**/*.class</exclude>
							<exclude>com/redwood/das/common/dao/*.class</exclude>
							<exclude>com/redwood/das/broker/model/*.class</exclude>
							<exclude>com/redwood/ams/jms/delegate/*.class</exclude>
							<exclude>com/redwood/ams/service/*.class</exclude>
							<exclude>com/redwood/web/utility/**/*.class</exclude>
							<exclude>com/redwood/ams/jms/delegate/**/*.class</exclude>
							<exclude>com/redwood/core/facade/impl/*.class</exclude>
							<exclude>com/redwood/core/hibernate/impl/*.class</exclude>
							<exclude>generated/**/*.class</exclude>
						</excludes>
					</instrumentation>
					<check />
				</configuration>
				<executions>
					<execution>
						<id>cobertura</id>
						<phase>test</phase>
						<goals>
							<goal>cobertura</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<!-- RP Core API -->
		<dependency>
			<groupId>com.redwood.rp.core</groupId>
			<artifactId>rpcore</artifactId>
			<version>${rpcore.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mvel</groupId>
			<artifactId>mvel2</artifactId>
			<version>2.1.3.Final</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<!-- <artifactId>maven-javadoc-plugin</artifactId> -->
				<!-- link failed unit tests to the source code of the unit test -->
				<artifactId>maven-jxr-plugin</artifactId>
				<configuration>
					<minmemory>128m</minmemory>
					<maxmemory>512m</maxmemory>
				</configuration>
			</plugin>
		</plugins>
	</reporting>
</project>
  
 